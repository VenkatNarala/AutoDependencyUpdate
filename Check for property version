task updateVersionVariables {
    doLast {
        def reportFile = file("build/dependencyUpdates/report.txt")
        def buildFile = file("build.gradle")

        if (!reportFile.exists()) {
            println "report.txt not found."
            return
        }

        def reportText = reportFile.text
        def dependencyUpdates = [:]
        def reportPattern = ~/^- ([\w\.\-]+):([\w\.\-]+) \[([\w\.\-]+) -> ([\w\.\-]+)\]/

        reportText.eachLine { line ->
            def matcher = (line =~ reportPattern)
            if (matcher.matches()) {
                def group = matcher[0][1]
                def name = matcher[0][2]
                def newVersion = matcher[0][4]
                dependencyUpdates["${group}:${name}"] = newVersion
            }
        }

        if (dependencyUpdates.isEmpty()) {
            println "No valid entries found in report.txt"
            return
        }

        def gradleText = buildFile.text
        def variableMap = [:]

        // Find lines like: implementation("group:name:${variable}")
        def usagePattern = ~/["']([\w\.\-]+):([\w\.\-]+):\$\{(\w+)\}["']/
        gradleText.eachMatch(usagePattern) { match ->
            def group = match[1]
            def name = match[2]
            def varName = match[3]
            def depKey = "${group}:${name}"
            if (dependencyUpdates.containsKey(depKey)) {
                variableMap[varName] = dependencyUpdates[depKey]
            }
        }

        if (variableMap.isEmpty()) {
            println "No matching variables found to update."
            return
        }

        println "Updating variables: $variableMap"

        def updatedLines = gradleText.readLines().collect { line ->
            def varLine = line.trim() =~ /^(\w+)\s*=\s*['"]([\w\.\-]+)['"]/
            if (varLine.matches()) {
                def varName = varLine[0][1]
                if (variableMap.containsKey(varName)) {
                    return line.replaceAll(/(['"])[\w\.\-]+(['"])/, "'${variableMap[varName]}'")
                }
            }
            return line
        }

        buildFile.text = updatedLines.join("\n")
        println "âœ… Version variables updated successfully."
    }
}
