import java.util.regex.*

def reportFile = file("build/dependencyUpdates/report.txt")
def buildFile = file("build.gradle")

task updateVersionVariables {
    doLast {
        if (!reportFile.exists()) {
            println "❌ report.txt not found."
            return
        }

        println "📖 Reading report.txt..."
        def reportLines = reportFile.readLines().findAll { it.startsWith("- ") }
        def updates = [:]

        def pattern = ~/^- ([\w\.\-]+):([\w\.\-]+) \[(.*?) -> (.*?)\]$/

        reportLines.each { line ->
            def matcher = (line =~ pattern)
            if (matcher.matches()) {
                def group = matcher[0][1]
                def name = matcher[0][2]
                def oldVersion = matcher[0][3]
                def newVersion = matcher[0][4]
                def key = "${group}:${name}"
                updates[key] = [oldVersion, newVersion]
                println "✅ Found update for $key: $oldVersion -> $newVersion"
            } else {
                println "⚠️ Could not parse line: $line"
            }
        }

        if (updates.isEmpty()) {
            println "❌ No valid dependency updates found in report.txt"
            return
        }

        println "\n🛠 Updating build.gradle..."
        def buildLines = buildFile.readLines()
        def updatedLines = []

        def updatedVars = 0

        buildLines.each { line ->
            def trimmed = line.trim()
            def varMatch = (trimmed =~ /^(\w+)\s*=\s*'([\d\.A-Za-z\-]+)'/)

            if (varMatch.matches()) {
                def varName = varMatch[0][1]
                def currentVersion = varMatch[0][2]

                // Check if this variable is used in any dependency that has an update
                def usedKey = updates.find { key, versions ->
                    buildLines.any {
                        it.contains("\${${varName}}") && it.contains(key.split(":")[1])
                    } && versions[0] == currentVersion
                }

                if (usedKey) {
                    def newVersion = usedKey.value[1]
                    def newLine = line.replace("'${currentVersion}'", "'${newVersion}'")
                    updatedLines << newLine
                    println "🔁 Updated ${varName} from ${currentVersion} to ${newVersion}"
                    updatedVars++
                } else {
                    updatedLines << line
                }
            } else {
                updatedLines << line
            }
        }

        if (updatedVars > 0) {
            buildFile.text = updatedLines.join("\n")
            println "\n✅ Updated $updatedVars variable(s) in build.gradle"
        } else {
            println "⚠️ No variable versions matched dependencies with updates"
        }
    }
}
