import java.util.regex.*

task updateVariableVersions {
    def reportFile = file("build/dependencyUpdates/report.txt")
    def buildFile = file("build.gradle")
    def tempFile = file("build.gradle.tmp")

    doLast {
        if (!reportFile.exists()) {
            println "[ERROR] report.txt not found!"
            return
        }

        def reportLines = reportFile.readLines()
        def dependencyUpdates = [:]

        // Parse report.txt lines
        println "\n[INFO] Parsing report.txt..."
        reportLines.each { line ->
            def matcher = line =~ /-\s+([\w\.\-]+):([\w\.\-]+)\s+\[([\d\.\-a-zA-Z]+)\s+->\s+([\d\.\-a-zA-Z]+)]/
            if (matcher.matches()) {
                def group = matcher[0][1]
                def name = matcher[0][2]
                def oldVersion = matcher[0][3]
                def newVersion = matcher[0][4]
                def key = "${group}:${name}"
                dependencyUpdates[key] = [oldVersion, newVersion]
                println "  [FOUND] ${key}: ${oldVersion} -> ${newVersion}"
            }
        }

        if (dependencyUpdates.isEmpty()) {
            println "[INFO] No valid dependency updates found in report.txt"
            return
        }

        // Read build.gradle and look for variables
        println "\n[INFO] Scanning build.gradle for variable assignments..."
        def buildLines = buildFile.readLines()
        def updatedLines = []
        def updatesMade = 0

        buildLines.each { line ->
            def variableMatcher = line =~ /^\s*([a-zA-Z0-9_]+)\s*=\s*['"]([\d\.\-a-zA-Z]+)['"]/
            if (variableMatcher.matches()) {
                def varName = variableMatcher[0][1]
                def varVersion = variableMatcher[0][2]

                def matchedDependency = dependencyUpdates.find { entry ->
                    def (depKey, versions) = entry
                    def (oldVersion, newVersion) = versions
                    return varVersion == oldVersion
                }

                if (matchedDependency) {
                    def (depKey, versions) = matchedDependency
                    def (oldVersion, newVersion) = versions
                    def updatedLine = line.replace(oldVersion, newVersion)
                    println "  [UPDATE] ${varName}: ${oldVersion} -> ${newVersion} (from ${depKey})"
                    updatedLines << updatedLine
                    updatesMade++
                } else {
                    updatedLines << line
                }
            } else {
                updatedLines << line
            }
        }

        // Write updated build.gradle
        buildFile.text = updatedLines.join("\n")

        if (updatesMade > 0) {
            println "\n✅ [SUCCESS] Updated ${updatesMade} version variable(s) in build.gradle"
        } else {
            println "\nℹ️ [INFO] No matching variables found to update in build.gradle"
        }
    }
}
