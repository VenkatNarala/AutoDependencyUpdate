import java.util.regex.*

task updateVersionVariablesOnly {
    group = "versioning"
    description = "Updates version variables in ext {} block using report.txt"

    doLast {
        def reportFile = file("build/dependencyUpdates/report.txt")
        def buildFile = file("build.gradle")

        println "🔍 Starting version variable update..."

        if (!reportFile.exists()) {
            println "❌ report.txt not found!"
            return
        }

        def buildText = buildFile.text
        def versionMap = [:]

        // Load report.txt: look for lines like "- group:name [old -> new]"
        def pattern = ~/^\s*-\s*([^\s:]+):([^\s\[]+)\s*\[.*?->\s*([^\]]+)\s*\]/
        println "📄 Reading report.txt..."

        reportFile.eachLine { line ->
            def matcher = line =~ pattern
            if (matcher.matches()) {
                def group = matcher[0][1].trim()
                def name = matcher[0][2].trim()
                def newVersion = matcher[0][3].trim()
                versionMap[name] = newVersion
                println "🔧 Found: ${group}:${name} -> ${newVersion}"
            }
        }

        if (versionMap.isEmpty()) {
            println "⚠️ No version updates found."
            return
        }

        def updated = false

        versionMap.each { depName, newVersion ->
            // Try exact match like postgresqlVersion
            def candidates = [
                "${depName}Version",
                depName.replaceAll('-', '') + "Version",
                depName.tokenize('-').collect { it.capitalize() }.join('').uncapitalize() + "Version"
            ].unique()

            def found = false

            candidates.each { varName ->
                def regex = ~/(?m)^(\s*)${varName}\s*=\s*['"]([^'"]+)['"]/
                if (buildText =~ regex) {
                    println "✅ Updating: ${varName} -> ${newVersion}"
                    buildText = buildText.replaceAll(regex) { _, indent, oldValue ->
                        "${indent}${varName} = '${newVersion}'"
                    }
                    found = true
                    updated = true
                }
            }

            if (!found) {
                println "⚠️ No matching variable found for dependency: ${depName}"
                println "🔍 Tried variable names: ${candidates.join(', ')}"
            }
        }

        if (updated) {
            buildFile.text = buildText
            println "✅ Version variables in build.gradle updated successfully."
        } else {
            println "📭 No variables updated in build.gradle."
        }
    }
}
